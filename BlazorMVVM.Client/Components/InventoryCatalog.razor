@using BlazorMVVM.Client.ViewModels

@*@onclick="@ViewModel.AddItemsButtonClickDelegate.Invoke"*@
<button class="btn btn-primary">Display/Hide Catalog</button>

@if (ViewModel.CatalogItems.Count > 0)
{
    <table class="table table-bordered table-hover">
        <thead class="thead-light">
            <tr>
                <th>Item</th>
                <th>Quantity</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in ViewModel.CatalogItems)
            {
                //onclick="@(() => ViewModel.SelectItem(item.Key);)"
                <tr>
                    <td>@item.Value.Name</td>
                    <td>@item.Value.Quantity</td>
                    <td>@item.Value.Price.DisplayPrice()</td>
                </tr>
            }
        </tbody>
    </table>
}
@if (ViewModel.SelectedItem.Key != 0)
{
    <table class="table">
        <tbody>
            <tr>
                <td>@ViewModel.SelectedItem.Value.Name</td>
                <td><button class="btn bg-primary" onclick="OnAddSelectedItemToCart" )>Add to Cart</button></td>
                <td><button class="btn bg-primary" onclick="OnClickCancel">Cancel</button></td>
            </tr>
        </tbody>
    </table>
}

@code {
    [Parameter]
    public IInventoryCatalog_ViewModel ViewModel { get; set; }

    [Parameter]
    public EventCallback<int> AddSelectedItemToCart { get; set; }

    protected void OnAddSelectedItemToCart()
    {
        AddSelectedItemToCart.InvokeAsync(ViewModel.SelectedItem.Key);
    }
    protected void OnClickCancel()
    {
        ViewModel.ClickCancel();
    }
    protected override void OnInitialized()
    {

    }
    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        Console.WriteLine("Inventory Catalog View OnAfterRender");

    }
}
